package main

import (
	"log"

	crypt "personaerpgcompanion/pkg"
	db "personaerpgcompanion/pkg/models/mysql"

	_ "github.com/go-sql-driver/mysql"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

type weapon struct {
	name       string
	tp         string
	skill      string
	rng        string
	dmg        int
	dls        int
	hand1      string
	hand2      string
	rarity     int
	price      int
	curr       string
	qualities  string
	additional string
	source     string
	pic        string
}

func main() {

	// Bot
	bot, err := tgbotapi.NewBotAPI(crypt.TGKey())
	if err != nil {
		log.Panic(err)
	}

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	updates := bot.GetUpdatesChan(u)

	// Database
	dbName := crypt.DBName("test")
	dbConnect, err := db.OpenDB(dbName)
	if err != nil {
		log.Panic(err)
	}
	defer dbConnect.Close()

	// Update
	for update := range updates {
		if update.Message != nil {
			log.Printf("[%s - %d] %s", update.Message.From.UserName, update.Message.From.ID, update.Message.Text)
			messageToReply := ""
			//	"–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –æ–ø–æ–∑–Ω–∞–Ω–∞!\n\"w –ù–∞–∑–≤–∞–Ω–∏–µ–û—Ä—É–∂–∏—è\" —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –æ—Ä—É–∂–∏–µ"

			if !(update.Message.IsCommand()) {

				messageToReply = "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –æ–ø–æ–∑–Ω–∞–Ω–∞!"
				messageToReply += "\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –∫–æ–º–∞–Ω–¥–∞—Ö –±–æ—Ç–∞."

			} else {
				switch update.Message.Command() {
				case "start":
					messageToReply = "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç Personae ‚Äî –≤–∞—à –∫–æ–º–ø–∞–Ω—å–æ–Ω –≤ –º–∏—Ä–µ –ù–†–ò!"
					messageToReply += "\n\n–°–µ–π—á–∞—Å –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ –¥–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. "
					messageToReply += "–ß—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ–∏ –∏–¥–µ–∏ –∏–ª–∏ –æ–±–æ–∑–Ω–∞—á–∏—Ç—å –æ—à–∏–±–∫—É –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º @gewiahr."
					messageToReply += "\n\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /help."
					break
				case "help":
					messageToReply = "‚öîÔ∏è –î–ª—è –ø–æ–∏—Å–∫–∞ –æ—Ä—É–∂–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /w –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ä—É–∂–∏—è."
					messageToReply += "\nüëò –î–ª—è –ø–æ–∏—Å–∫–∞ –±—Ä–æ–Ω–∏ –∏ –æ–¥–µ–∂–¥—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /a –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—Ä–æ–Ω–∏ –∏–ª–∏ –æ–¥–µ–∂–¥—ã."
					messageToReply += "\n"
					messageToReply += "\n–ü–æ–∫–∞ —á—Ç–æ –±–æ—Ç –ø–æ–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ."
					break
				case "w":
					messageToReply = db.IdentifyWeapon(update.Message.CommandArguments(), dbConnect)
				case "a":
					messageToReply = db.IdentifyArmor(update.Message.CommandArguments(), dbConnect)
					break
				default:
					messageToReply = "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –æ–ø–æ–∑–Ω–∞–Ω–∞!\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –∫–æ–º–∞–Ω–¥–∞—Ö –±–æ—Ç–∞"
					break
				}
			}

			msg := tgbotapi.NewMessage(update.Message.Chat.ID, messageToReply)
			msg.ParseMode = "HTML"
			//photo := tgbotapi.NewInputMediaPhoto(tgbotapi.FilePath("aaa.png"))
			//msg. Photo
			//entity := new(tgbotapi.MessageEntity)
			//entity.Type = "bot_command"
			//entity.Length = 3
			//entity.Offset = 2
			//msg.Entities = append(msg.Entities, *entity)
			//msg.ReplyToMessageID = update.Message.MessageID

			bot.Send(msg)
		}
	}
}
